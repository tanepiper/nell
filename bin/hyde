#!/usr/bin/env node
'use strict';
var argv = require('optimist')
          .usage('Usage: hyde generate [options]')
          .argv;
//console.log(argv);

var generate = function() {
  var current_path = process.cwd();
  var config;
  try {
    config = require(current_path + '/hyde.json');
  } catch(e) {
     process.stderr.write('Unable to load hyde.json config file');
     return;
  }
  
  require(__dirname + '/../lib/generate')(current_path, config, function(err) {
    if (err) {
      process.stderr.write(err.message);
    } else {
      process.stdout.write('Site "' + config.site.title + '" generated in ' + current_path);
    }
  });
};

var preview = function() {
  var current_path = process.cwd();
  require(__dirname + '/../lib/preview')(current_path + '/output');
};

var newsite = function() {
  var name = (argv._[1]) ? argv._[1] : 'hyde-site';
  var current_path = process.cwd();

  require(__dirname + '/../lib/newsite')(current_path, name, {}, function(err) {
    if (err) {
      process.stderr.write(err.message);
    } else {
      process.stdout.write('Site ' + name + ' created in ' + current_path);
    }
  });
};


if (argv._.length === 0 || argv._[0] === 'generate') {
  generate();
}

if (argv._[0] === 'newsite') {
  newsite();
}

if (argv._[0] === 'preview') {
  preview();
}
