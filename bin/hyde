#!/usr/bin/env node

/*
 * hyde
 * https://github.com/tanepiper/hyde
 *
 * Copyright (c) 2012 Tane Piper
 * Licensed under the MIT license.
 * https://github.com/tanepiper/hyde/blob/master/LICENSE-MIT
 */

'use strict';

var fs = require('fs');
var path = require('path');
require('colorful').colorful();
var program = require('commander');
var pkg = require(__dirname + '/../package.json');
var site_path = process.cwd();

var done = function(err, results) {
  if (err) {
    console.log( ('' + err).to.red.color);
    program.help();
    return;
  }
  if (results) {
    console.log( (''+results).to.blue.color);
  }
};

var processCommand = function(command) {
  if (command.indexOf('.js') !== -1) {
    command = command.replace('.js', '');
    var createCommand = function(command_name) {
      var command = require( path.join(__dirname, '..', 'lib', command_name) );
      var command_line = command.key + ((command.args) ? ' ' + command.args : '');
      program
        .command(command_line)
        .description(command.desc)
        .action(function(args, cmd) {
          if (command.args && typeof args === 'undefined') {
            if (!command.default) {
              return done( new Error('You have not passed the ' + command.args + ' argument for command ' + command.key) );
            } 
            args = command.default;
          }
          command.run(site_path, args, cmd, done);
        });
    };
    return createCommand(command);
  }
  return false;
};

program.version(pkg.version);

fs.readdirSync( path.join(__dirname, '..', 'lib') ).forEach(processCommand);

program.parse(process.argv);