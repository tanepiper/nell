#!/usr/bin/env node

/*
 * hyde
 * https://github.com/tanepiper/hyde
 *
 * Copyright (c) 2012 Tane Piper
 * Licensed under the MIT license.
 * https://github.com/tanepiper/hyde/blob/master/LICENSE-MIT
 */

'use strict';

var program = require('commander');
var clc = require('cli-color');
var config = require(__dirname + '/../package.json');

program
  .version(config.version)
  .option('generate', 'Generate a static site output')
  .option('init [name]', 'Create a new static site source folder [hyde-site]')
  .option('preview [port]', 'Preview the static site [4000]', parseInt)
  .option('newpost [name]', 'Generate a new post')
  .option('newpage [name]', 'Generate a new page')
  .option('--template [name]', 'Set the template name', 'default')
  .parse(process.argv);

var generate = function() {
  var site_path = process.cwd();
  var config;
  try {
    config = require(site_path + '/hyde.json');
  } catch(e) {
    console.error( clc.red('Unable to load hyde.json config file') );
    program.help();
    return;
  }
  
  require(__dirname + '/../lib/generate')(site_path, config, function(err) {
    if (err) {
      console.error( clc.red(err.message) );
    } else {
      console.info( 'Site ' + clc.blue(config.site.title) + ' generated in ' + clc.blue(site_path) );
    }
  });
};

var preview = function() {
  var site_path = process.cwd();
  try {
    config = require(site_path + '/hyde.json');
  } catch(e) {
    console.error( clc.red('Unable to load hyde.json config file') );
    program.help();
    return;
  }

  var options = {
    title: config.site.title,
    path: site_path + '/output',
    port: (program.init && typeof program.init === 'number') ? program.init : 4000
  };

  require(__dirname + '/../lib/preview')(options, function(err) {
    if (err) {
      console.error( clc.red(err.message) );
    } else {
      console.log( 'Site ' + clc.blue(options.title) + ' preview on ' + clc.blue('http://127.0.0.1:' + options.port) );
    }
  });
};

var newsite = function() {
  if (program.init && typeof program.init !== 'string') {
    console.error( clc.red('You must pass a name to initialise a new site') );
    return;
  }

  var options = {
    path: process.cwd(),
    title: program.init,
    template: program.template
  };

  require(__dirname + '/../lib/newsite')(options, function(err) {
    if (err) {
      console.error( clc.red(err.message) );
    } else {
      console.log( 'Site ' + clc.blue(options.title) + ' generated in ' + clc.blue(options.path) );
    }
  });
};

var newitem = function() {
  var options;
  var site_path = process.cwd();

  if (program.newpost && typeof program.newpost === 'string') {
    options = {
      name: program.newpost,
      type: 'post'
    };
  } else if (program.newpage && typeof program.newpage === 'string') {
    options = {
      name: program.newpage,
      type: 'page'
    };
  } else {
    console.error( clc.red('You must pass a title for your new item') );
    return;
  }

  require(__dirname + '/../lib/newitem')(site_path, options, function(err) {
    if (err) {
      console.error( clc.red(err.message) );
    } else {
      console.log( 'Site ' + clc.blue(options.type + ' ' + options.name) + ' generated in ' + clc.blue(site_path) );
    }
  });
};


if (program.generate) { generate(); }
else if (program.preview)  { preview();  }
else if (program.init)  { newsite();  }
else if (program.newpost || program.newpage)  { newitem(); }
else { generate(); }